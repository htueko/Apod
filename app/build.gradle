plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id "androidx.navigation.safeargs.kotlin"
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
}

android {
    compileSdkVersion ProjectConfig.compileSdkVersion
    buildToolsVersion ProjectConfig.buildToolsVersion


    defaultConfig {
        applicationId "com.htueko.apod"
        minSdkVersion ProjectConfig.minSdkVersion
        targetSdkVersion ProjectConfig.targetSdkVersion
        versionCode ProjectConfig.versionCode
        versionName ProjectConfig.versionName
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

kapt {
    correctErrorTypes true
}

dependencies {

    // Kotlin Stdlib
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"

    // Coroutines (Android)
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // Android
    implementation "androidx.core:core-ktx:$coreKtxVersion"
    implementation "androidx.legacy:legacy-support-v4:$legacySupportVersion"
    implementation "androidx.appcompat:appcompat:$appcompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayoutVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"

    // Material Design
    implementation "com.google.android.material:material:$materialDesignVersion"

    // MultiDex
    implementation "androidx.multidex:multidex:$multidexVersion"

    // Dagger + Hilt
    implementation "com.google.dagger:hilt-android:$daggerHiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$daggerHiltVersion"

    // Hilt + Jetpack
    implementation "androidx.hilt:hilt-work:$jetpackHiltVersion"
    kapt "androidx.hilt:hilt-compiler:$jetpackHiltVersion"

    // ViewModel objects with Hilt
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$jetpackHiltVersion"
    kapt "androidx.hilt:hilt-compiler:$jetpackHiltVersion"

    // Activity KTX for viewModels()
    implementation "androidx.activity:activity-ktx:1.1.0"

    // Assisted Inject
    compileOnly "com.squareup.inject:assisted-inject-annotations-dagger2:$assistedInjectVersion"
    kapt "com.squareup.inject:assisted-inject-processor-dagger2:$assistedInjectVersion"

    // Lifecycle
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycleVersion"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleVersion"

    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleVersion"
    // Annotation processor
    kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycleVersion"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationVersion"

    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$roomVersion"

    // Paging 3
    implementation "androidx.paging:paging-runtime-ktx:$pagingVersion"

    // network & serialization GSON and Retrofit
    implementation "com.google.code.gson:gson:$gsonVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"

    // glide image loading library
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // De Sugaring library
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:$deSugaringVersion"

    // Lottie Animation Library
    implementation "com.airbnb.android:lottie:$lottieVersion"

    // Testing
    implementation "androidx.test:core:$coreTestVersion"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    testImplementation "androidx.arch.core:core-testing:$xCoreTestVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutineTestVersion"
    testImplementation "com.google.truth:truth:$truthVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "com.google.truth:truth:$truthVersion"

    // Android Testing
    androidTestImplementation "junit:junit:$junitVersion"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:2.12.1"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutineTestVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$xCoreTestVersion"
    androidTestImplementation "com.google.truth:truth:$truthVersion"
    androidTestImplementation "androidx.test.ext:junit:$junitTestVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$expressoCoreVersion"
    androidTestImplementation "org.mockito:mockito-core:$mockitoVersion"
    androidTestImplementation "com.google.truth:truth:$truthVersion"

}